# Generated by Django 5.2.5 on 2025-08-14 13:59

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('mit_chatbot', '0005_conversation_metadata'),
    ]

    operations = [
        migrations.CreateModel(
            name='AcademicSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_current', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('hod', models.CharField(blank=True, max_length=200)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('dean', models.CharField(blank=True, max_length=200)),
                ('established_year', models.IntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Faculties',
            },
        ),
        migrations.AddField(
            model_name='customuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='custom_user_set', related_query_name='custom_user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='custom_user_set', related_query_name='custom_user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('credits', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(6)])),
                ('level', models.IntegerField(choices=[(100, '100'), (200, '200'), (300, '300'), (400, '400'), (500, '500')])),
                ('course_type', models.CharField(choices=[('CORE', 'Core Course'), ('ELECTIVE', 'Elective Course'), ('GENERAL', 'General Studies'), ('PRACTICAL', 'Practical Course')], default='CORE', max_length=20)),
                ('lecturer', models.CharField(blank=True, max_length=200)),
                ('has_practical', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('prerequisites', models.ManyToManyField(blank=True, related_name='prerequisite_for', to='mit_chatbot.course')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='mit_chatbot.department')),
            ],
            options={
                'ordering': ['code'],
            },
        ),
        migrations.AddField(
            model_name='department',
            name='faculty',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='departments', to='mit_chatbot.faculty'),
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester_number', models.IntegerField(choices=[(1, 'First Semester'), (2, 'Second Semester')])),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('registration_start', models.DateField()),
                ('registration_end', models.DateField()),
                ('is_current', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='semesters', to='mit_chatbot.academicsession')),
            ],
            options={
                'ordering': ['-session__start_date', 'semester_number'],
                'unique_together': {('session', 'semester_number')},
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id', models.CharField(max_length=20, unique=True)),
                ('current_level', models.IntegerField(choices=[(100, '100 Level'), (200, '200 Level'), (300, '300 Level'), (400, '400 Level'), (500, '500 Level')], default=100)),
                ('mode_of_entry', models.CharField(choices=[('DIRECT', 'Direct Entry'), ('UTME', 'UTME'), ('TRANSFER', 'Transfer'), ('PRE_DEGREE', 'Pre-Degree')], default='UTME', max_length=20)),
                ('student_type', models.CharField(choices=[('REGULAR', 'Regular'), ('PART_TIME', 'Part-Time'), ('SANDWICH', 'Sandwich')], default='REGULAR', max_length=20)),
                ('middle_name', models.CharField(blank=True, max_length=150)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female')], max_length=1)),
                ('state_of_origin', models.CharField(blank=True, max_length=100)),
                ('address', models.TextField(blank=True)),
                ('phone_number', models.CharField(blank=True, max_length=20)),
                ('guardian_name', models.CharField(blank=True, max_length=200)),
                ('guardian_phone', models.CharField(blank=True, max_length=20)),
                ('guardian_relationship', models.CharField(blank=True, max_length=50)),
                ('current_cgpa', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=4)),
                ('total_credits_earned', models.IntegerField(default=0)),
                ('academic_standing', models.CharField(choices=[('EXCELLENT', 'Excellent'), ('VERY_GOOD', 'Very Good'), ('GOOD', 'Good'), ('SATISFACTORY', 'Satisfactory'), ('PROBATION', 'Probation'), ('FIRST_CLASS', 'First Class'), ('SECOND_CLASS_UPPER', 'Second Class Upper'), ('SECOND_CLASS_LOWER', 'Second Class Lower'), ('THIRD_CLASS', 'Third Class')], default='GOOD', max_length=30)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('SUSPENDED', 'Suspended'), ('GRADUATED', 'Graduated'), ('WITHDRAWN', 'Withdrawn'), ('DEFERRED', 'Deferred')], default='ACTIVE', max_length=20)),
                ('graduation_status', models.CharField(choices=[('IN_PROGRESS', 'In Progress'), ('GRADUATED', 'Graduated'), ('WITHDRAWN', 'Withdrawn')], default='IN_PROGRESS', max_length=20)),
                ('graduation_date', models.DateField(blank=True, null=True)),
                ('class_of_degree', models.CharField(blank=True, max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('current_session', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='current_students', to='mit_chatbot.academicsession')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='students', to='mit_chatbot.department')),
                ('entry_session', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='entry_students', to='mit_chatbot.academicsession')),
                ('faculty', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='students', to='mit_chatbot.faculty')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='student_profile', to='mit_chatbot.customuser')),
            ],
            options={
                'verbose_name': 'Student',
                'verbose_name_plural': 'Students',
                'ordering': ['student_id'],
            },
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ca_score', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(30)])),
                ('exam_score', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(70)])),
                ('total_score', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('grade', models.CharField(blank=True, choices=[('A', 'A (Excellent)'), ('B', 'B (Very Good)'), ('C', 'C (Good)'), ('D', 'D (Satisfactory)'), ('E', 'E (Pass)'), ('F', 'F (Fail)')], max_length=2)),
                ('grade_point', models.DecimalField(decimal_places=1, default=Decimal('0.0'), max_digits=3)),
                ('credit_earned', models.IntegerField(default=0)),
                ('status', models.CharField(choices=[('PASSED', 'Passed'), ('FAILED', 'Failed'), ('PENDING', 'Pending'), ('RETAKE', 'Retake')], default='PENDING', max_length=20)),
                ('is_final', models.BooleanField(default=False)),
                ('date_recorded', models.DateTimeField(auto_now_add=True)),
                ('recorded_by', models.CharField(blank=True, max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='mit_chatbot.course')),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='mit_chatbot.semester')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='mit_chatbot.student')),
            ],
            options={
                'ordering': ['-semester__session__start_date', 'course__code'],
                'unique_together': {('student', 'course', 'semester')},
            },
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrollment_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('ENROLLED', 'Enrolled'), ('DROPPED', 'Dropped'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed')], default='ENROLLED', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='mit_chatbot.course')),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='mit_chatbot.semester')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='mit_chatbot.student')),
            ],
            options={
                'ordering': ['-semester__session__start_date', 'course__code'],
                'unique_together': {('student', 'course', 'semester')},
            },
        ),
    ]
